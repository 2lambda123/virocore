# Customize this file, documentation can be found here:
# https://docs.fastlane.tools/actions/
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.64.0"

default_platform :android

platform :android do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  end
  
  lane :gradle_clean do
    gradle(task: "clean")
  end
  desc "Build react library version ViroRenderer - viro_renderer-release.aar"
  desc "And copy it to ../../../react-viro/android/viro_renderer/"
  lane :renderer_viro_core_lib do
    ensure_git_status_clean
    gradle(task: ":viroreact:assembleRelease")
    changelog_from_git_commits(commits_count: 5,
                   pretty: "- (%ae) %s",
                   date_format: "short",
                   merge_commit_filtering: "exclude_merges") 
  end


  desc "Build viro core library version ViroRenderer - viro_core-release.aar"
  lane :renderer_viro_react_lib do
    ensure_git_status_clean
    gradle(task: ":virocore:assembleRelease")
    changelog_from_git_commits(commits_count: 5,
                   pretty: "- (%ae) %s",
                   date_format: "short",
                   merge_commit_filtering: "exclude_merges") 
  end
  
  lane :renderer_cp_viro_react_lib_to_tmp do
    sh("mkdir -p /tmp/viro_react_lib/")
    sh("cp ../viroreact/build/outputs/aar/viroreact-release.aar /tmp/viro_react_lib/viro_renderer-release.aar")
  end

  lane :renderer_memoryleaktest do
    gradle(task: ":memoryleaktest:assembleArcoreDebug")
  end
  
  lane :renderer_releasetest do
    gradle(task: ":releasetest:assembleArcoreDebug")
  end

  desc "Build all artifacts for rendererTest (ovr, gvr, arcore, scene)"
  lane :release_renderer_rendererTest do
    gradle(task: ":rendererTest:assembleRelease")
  end

  desc "Build all artifacts for releaseTest (ovr, gvr, arcore, scene)"
  lane :release_renderer_releaseTest do
    gradle(task: ":releaseTest:assembleRelease")
  end
  

  desc "Build all artifacts for memoryLeakTest (ovr, gvr, arcore, scene)"
  lane :release_renderer_memoryTest do
    gradle(task: ":memoryLeakTest:assembleRelease")
  end
  
  
  desc "Build all artifacts for ViroRenderer (ovr, gvr, arcore, scene)"
  lane :release_renderer do
    gradle(task: "assembleRelease")
  end

  # This block contains all the lanes to run virocore releasetests and memoryleaktests
  lane :run_releasetest do |options|
    gradle(task: ":releaseTest:connectedSceneDebugAndroidTest")
  end
  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end

# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded.
# Learn more at https://docs.fastlane.tools/#metrics
