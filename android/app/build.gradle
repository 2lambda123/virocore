apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11 -frtti"
            }
        }
        ndk {
            // Specifies the ABI configurations of your native
            // libraries Gradle should build and package with your APK.
            abiFilters 'armeabi-v7a'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "COGNITO_IDENTITY_POOL_ID", "***REMOVED***"
        }
        debug {
            buildConfigField "String", "COGNITO_IDENTITY_POOL_ID", "***REMOVED***"
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.0.0'
    compile 'com.google.android.exoplayer:exoplayer:r2.2.0'
    compile project(':libs:gvr')
    compile 'com.google.protobuf.nano:protobuf-javanano:3.0.0-alpha-7'
    compile 'com.amazonaws:aws-android-sdk-core:2.2.+'
    compile 'com.amazonaws:aws-android-sdk-ddb:2.2.+'
    compile 'com.amazonaws:aws-android-sdk-ddb-mapper:2.2.+'
    compile 'com.amazonaws:aws-android-sdk-cognito:2.2.+'
    compile 'com.amazonaws:aws-android-sdk-cognitoidentityprovider:2.2.+'

    testCompile 'junit:junit:4.12'
}

task copyDebugAAR(type: Copy) {
    from('build/outputs/aar')
    // Change the next line to reflect the path to your react-viro repo, this
    // script is run from ViroRenderer/android/app/
    into('../../../react-viro/android/viro_renderer/')
    include(project.name + '-debug.aar')
    rename(project.name + '-debug.aar', 'viro_renderer-debug.aar')
}

task copyReleaseAAR(type: Copy) {
    from('build/outputs/aar')
    // Change the next line to reflect the path to your react-viro repo, this
    // script is run from ViroRenderer/android/app/
    into('../../../react-viro/android/viro_renderer/')
    include(project.name + '-release.aar')
    rename(project.name + '-release.aar', 'viro_renderer-release.aar')
}

tasks.whenTaskAdded { task ->
    if (task.name == 'assembleRelease') {
        task.finalizedBy 'copyReleaseAAR'
    }
}

tasks.whenTaskAdded { task ->
    if (task.name == 'assembleDebug') {
        task.finalizedBy 'copyDebugAAR'
    }
}

build.dependsOn(':extractNdk')